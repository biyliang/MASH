#################################################################
#
#   MASH
#   R6-ified
#   Development Notes
#   Sean Wu
#
#################################################################


### TO-DO:
1. Add aging to Human and HumanPop
2. Fix the shitty PfPR init in MacroTile
3. Better data logging for MacroTile
4. For all XX.Setup() functions, add arg 'overwrite' boolean to toggle overwriting. If you do this you cannot
   have any orphan XX$set() functions anymore
5. in MacroTile::initialize(), make travelHabit arg 'n' part of HumanPop_PAR

# naming conventions
HUMANS/MICRO/MACRO/PATHOGEN/INTERVENTION - Human/HumanPop/Mosquito/MosquitoPop/PfSI/Site/Tile/Emerge,etc - Class/Parameters/Main/Auxiliary.R

* XX - XX - Setup.R: these files define functions of the same name XX.XX.Setup(); they may only define simple setters/getters
* XX - XX - SomeMethods: these files define methods/fields that are initialized in the above XX - XX - Setup.R function; example:
  MACRO-Human-Movement.R

# things start being called -Methods.R then if needed they can split.


# humans for PfSI
before making any objects, run PfSI.Setup()
then run SimBitePfSI.Setup()

to initialize first make the HumanPop object then for PfSI you will need to run PfSI.Init(PfPR = XX) on your object.


# other conventions:
* never initialize pointers in the $new() or initialize() functions; initialize after with their setter function $set_POINTER():
  * except in HumanPop where pointers for the Human objects to point up to HumanPop.
  * possibly needed for mosquitoes.
* XX.Init are methods added to OBJECTS already in the environment
* XX.Setup are FUNCTIONS called before any OBJECTS are created.
* .Init,.Setup,.Parameters are the only times that period may be used to define thing.
* when a setter needs to take the object and an index, go set_XX(obj, ix = NULL){...}
# tag debug lines with DEBUG_TAG

# dave MACRO to sean R6 MACRO name changes
* w = biteWeight
* ixTrip = ixP (its in the PAR list so its not ambiguous)
* PfTypes = patchPf


### files that directly set methods/fields without prompting (not in a .SETUP function)
## see TO-DO task 5; these will need to be changed.
* MACRO-MosquitoPop-Methods.R
* MACRO-Patch-Methods.R
* MACRO-Human-Biting.R

### SETUP FUNCTIONS
* AQUA-Macro-Emerge.R: MACRO.Patch.Emerge.Setup()
* AQUA-Micro-Main.R: MICRO.Aqua.Setup()
* AQUA-MicroEmerge-Setup.R: MICRO.Emerge.Setup()
* PATHOGEN-Macro-PfMethods.R: MACRO.patchPf.Setup()
* PATHOGEN-PfSI-Auxiliary.R: PfSI.Auxiliary.Setup()
* PATHOGEN-PfSI-Methods.R: PfSI.Setup()
* PATHOGEN-PfSI-SimBite.R: SimBitePfSI.Setup()

### PARAMETER FUNCTIONS
* PATHOGEN-PfSI-Parameters.R: PfSI.Parameters()
* MACRO-Patch-Parameters.R: MACRO.Patch.Parameters()
* HUMANS-HumanPop-Parameters.R: HumanPop.Parameters()
* MacroMosquitoPop-Parameters.R: MACRO.MosquitoPop.Parameters()
* MACRO-Tile-Parameters.R: MACRO.Tile.Parameters()


### INIT FUNCTIONS
* PATHOGEN-PfSI-Methods.R: PfSI.Init() -> HumanPop


### BIYONKA CODE HELP:
1. Need help seperating function definitions from XX.Setup() files in:
  * PATHOGEN-PfSI-SimBite.R
  * PATHOGEN-PfSI-Methods.R


### Conventions for Documentation:
1. Methods
  *

2. XX.Setup() functions

3. XX.Parameters() functions

4. XX.Init() functions
